# Reading pref.tcl
# do SW_run_msim_rtl_vhdl.do
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Copying D:/Softwares/QUARTZ/modelsim_ase/win32aloem/../modelsim.ini to modelsim.ini
# Modifying modelsim.ini
# 
# vcom -93 -work work {C:/Users/menab/OneDrive/Desktop/Annie/SW.vhd}
# Model Technology ModelSim - Intel FPGA Edition vcom 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 18:12:32 on Dec 29,2023
# vcom -reportprogress 300 -93 -work work C:/Users/menab/OneDrive/Desktop/Annie/SW.vhd 
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Compiling entity SW
# -- Compiling architecture op of SW
# End time: 18:12:32 on Dec 29,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
vsim work.sw(op)
# vsim work.sw(op) 
# Start time: 18:12:43 on Dec 29,2023
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading work.sw(op)
add wave -position insertpoint  \
sim:/sw/secs_out \
sim:/sw/mins_out \
sim:/sw/clk \
sim:/sw/start_stop \
sim:/sw/finish
force -freeze sim:/sw/clk 1 0, 0 {500000000000 ps} -r 1000ms
force -freeze sim:/sw/start_stop 0 0
run
run
run
force -freeze sim:/sw/start_stop 1 0
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
# End time: 18:17:53 on Dec 29,2023, Elapsed time: 0:05:10
# Errors: 0, Warnings: 0
